name: CI

on:
  pull_request:
  push:
    branches:
      - master

env:
  # Use default Xcode on runner instead of specifying version
  # DEVELOPER_DIR: /Applications/Xcode_15.0.app/Contents/Developers
  FASTLANE_SKIP_UPDATE_CHECK: true
  FASTLANE_XCODE_LIST_TIMEOUT: 80
  FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 80
  HOMEBREW_NO_INSTALL_CLEANUP: TRUE
  BUNDLE_PATH: vendor/bundle

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - uses: ruby/setup-ruby@0481980f17b760ef6bca5e8c55809102a0af1e5a  # v1.263.0
        with:
          ruby-version: "3.1"
          bundler-cache: true
      - name: YamlLint
        run: yamllint --strict --format github .
      - name: RuboCop
        run: bundle exec rubocop --format github
      - name: SwiftLint
        run: |
          docker run --rm -v `pwd`:`pwd` -w `pwd` \
            ghcr.io/realm/swiftlint:0.54.0 \
            swiftlint lint --strict --config .swiftlint.yml --reporter github-actions-logging
      - name: SwiftFormat
        run: |
          docker run --rm -v `pwd`:`pwd` -w `pwd` \
            ghcr.io/nicklockwood/swiftformat:0.53.1 \
            --lint --config .swiftformat .

  check-swiftlint-disables:
    needs: lint
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: Scan for `swiftlint:disable` in PR diff
        id: scan
        continue-on-error: false
        run: |
          git fetch origin master:refs/remotes/origin/master
          DISABLE_LINES=$(git diff origin/master -- '*.swift' | grep -E '^\+.*// swiftlint:disable' || true)
          echo "disable_lines<<EOF" >> $GITHUB_OUTPUT
          echo "$DISABLE_LINES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR if `swiftlint:disable` is found
        if: steps.scan.outputs.disable_lines != ''
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405  # v2.9.4
        with:
          header: swiftlint-disable-check
          message: |
            ⚠️ **SwiftLint disabled in this PR**

            The following added lines contain `// swiftlint:disable`. Please verify this is necessary.

  test:
    needs: check-swiftlint-disables
    runs-on: macos-14
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.3.0
        name: "Cache: Pods"
        id: cache_pods
        with:
          path: |
            Pods
            Tools/MaterialDesignIcons.ttf
            Tools/MaterialDesignIcons.json
          key: >-
            ${{ runner.os }}-pods-${{ env.DEVELOPER_DIR }}-
            ${{ hashFiles('**/Gemfile.lock', '**/Podfile.lock', 'Tools/BuildMaterialDesignIconsFont.sh') }}

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.3.0
        name: "Cache: Gems"
        id: cache_gems
        with:
          path: vendor/bundle
          key: >-
            ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ env.DEVELOPER_DIR }}-${{ hashFiles('**/Gemfile.lock') }}

      - name: Install Brews
        # right now, we don't need anything from brew for tests, so save some time
        if: ${{ false }}
        run: brew bundle

      - name: Install Gems
        if: steps.cache_gems.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3

      - name: Install Pods Release
        if: steps.cache_pods.outputs.cache-hit != 'true'
        run: bundle exec pod install --repo-update

      - name: Run tests
        run: bundle exec fastlane test

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7  # v5.5.1
        name: "Upload Code Coverage"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        name: "Upload Test Logs"
        if: ${{ always() }}
        with:
          name: test-logs
          path: |
            ~/Library/Logs/DiagnosticReports
            ~/Library/Developer/Xcode/DerivedData/SH-PRO-*/Logs/Test
            ~/Library/Logs/scan

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        name: "Upload Simulator App"
        with:
          name: ios-simulator
          path: ~/Library/Developer/Xcode/DerivedData/SH-PRO-*/Build/Products/Debug-iphonesimulator/*.app

  size:
    needs: check-swiftlint-disables
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.full_name == 'Ikrma3/SH-Pro'
    runs-on: macos-14
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.6.2
        name: "Cache: Pods"
        id: cache_pods
        with:
          path: |
            Pods
            Tools/MaterialDesignIcons.ttf
            Tools/MaterialDesignIcons.json
          key: >-
            ${{ runner.os }}-pods-${{ env.DEVELOPER_DIR }}-
            ${{ hashFiles('**/Gemfile.lock', '**/Podfile.lock', 'Tools/BuildMaterialDesignIconsFont.sh') }}

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830  # v4.3.0
        name: "Cache: Gems"
        id: cache_gems
        with:
          path: vendor/bundle
          key: >-
            ${{ runner.os }}-gems-${{ env.ImageVersion }}-${{ env.DEVELOPER_DIR }}-${{ hashFiles('**/Gemfile.lock') }}

      - name: Install Brews
        # right now, we don't need anything from brew for sizing, so save some time
        if: ${{ false }}
        run: brew bundle

      - name: Install Gems
        if: steps.cache_gems.outputs.cache-hit != 'true'
        run: bundle install --jobs 4 --retry 3

      - name: Install Pods Release
        if: steps.cache_pods.outputs.cache-hit != 'true'
        run: bundle exec pod install --repo-update

      - name: Build app
        run: bundle exec fastlane ios size
        env:
          P12_KEY_DISTRIBUTION: ${{ secrets.P12_KEY_DISTRIBUTION }}
          P12_VALUE_DISTRIBUTION: ${{ secrets.P12_VALUE_DISTRIBUTION }}
          P12_KEY_MAC_DEVELOPER_ID: ${{ secrets.P12_KEY_MAC_DEVELOPER_ID }}
          P12_KEY_MAC_DEVELOPER_INSTALLER: ${{ secrets.P12_KEY_MAC_DEVELOPER_INSTALLER }}
          P12_VALUE_MAC_DEVELOPER_ID: ${{ secrets.P12_VALUE_MAC_DEVELOPER_ID }}
          P12_VALUE_MAC_DEVELOPER_INSTALLER: ${{ secrets.P12_VALUE_MAC_DEVELOPER_INSTALLER }}
          EMERGE_API_TOKEN: ${{ secrets.EMERGE_API_TOKEN }}
          EMERGE_REPO_NAME: ${{ github.repository }}
          EMERGE_PR_NUMBER: ${{ github.event.number }}
          EMERGE_SHA: ${{ github.event.pull_request.head.sha }}
          EMERGE_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HOMEASSISTANT_APP_STORE_CONNECT_PASSWORD: ${{ secrets.HOMEASSISTANT_APP_STORE_CONNECT_PASSWORD }}
          HOMEASSISTANT_APPLE_ID: ${{ secrets.HOMEASSISTANT_APPLE_ID }}
          HOMEASSISTANT_FASTLANE_SESSION: ${{ secrets.HOMEASSISTANT_FASTLANE_SESSION }}
