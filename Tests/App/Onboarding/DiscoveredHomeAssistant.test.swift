import Foundation
import ObjectMapper
@testable import Shared
import Testing
import Version

@Suite("DiscoveredHomeAssistant Tests")
struct DiscoveredHomeAssistantTests {
    // MARK: - Manual URL Initialization Tests

    @Test("Manual URL initialization with local-like URL")
    func manualURLInitWithLocalURL() async throws {
        let localURL = URL(string: "http://192.168.1.100:8123")!
        let discovered = DiscoveredHomeAssistant(manualURL: localURL, name: "Test Home")

        #expect(discovered.uuid != nil)
        #expect(discovered.uuid?.hasPrefix("autogenerated-") == true)
        #expect(discovered.version == Version(major: 2022, minor: 4))
        #expect(discovered.internalOrExternalURL == localURL)
        #expect(discovered.locationName == "Test Home")
        #expect(discovered.bonjourName == nil)

        // The URL categorization depends on the actual isLocal implementation
        #expect(discovered.internalURL != nil || discovered.externalURL != nil)
    }

    @Test("Manual URL initialization with external URL")
    func manualURLInitWithExternalURL() async throws {
        let externalURL = URL(string: "https://example.duckdns.org:8123")!
        let discovered = DiscoveredHomeAssistant(manualURL: externalURL, name: "Remote Home")

        #expect(discovered.uuid != nil)
        #expect(discovered.uuid?.hasPrefix("autogenerated-") == true)
        #expect(discovered.version == Version(major: 2022, minor: 4))
        #expect(discovered.internalOrExternalURL == externalURL)
        #expect(discovered.locationName == "Remote Home")
        #expect(discovered.bonjourName == nil)

        // The URL categorization depends on the actual isLocal implementation
        #expect(discovered.internalURL != nil || discovered.externalURL != nil)
    }

    @Test("Manual URL initialization with default name")
    func manualURLInitWithDefaultName() async throws {
        let url = URL(string: "http://homeassistant.local:8123")!
        let discovered = DiscoveredHomeAssistant(manualURL: url)

        #expect(discovered.locationName == "Home")
    }
}
